{"type":"Program","body":[{"type":"ImportDeclaration","specifiers":[{"type":"ImportSpecifier","local":{"type":"Identifier","name":"permutate"},"imported":{"type":"Identifier","name":"permutate"}}],"source":{"type":"Literal","value":"../PermutateString","raw":"'../PermutateString'"}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"describe"},"arguments":[{"type":"Literal","value":"Permutate a string","raw":"'Permutate a string'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to throw an Error with an empty string","raw":"'expects to throw an Error with an empty string'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"permutate"},"arguments":[]}}]},"generator":false,"expression":false,"async":false}]},"property":{"type":"Identifier","name":"toThrow"}},"arguments":[{"type":"Literal","value":"The arg must be a valid, non empty string","raw":"'The arg must be a valid, non empty string'"}]}}]},"generator":false,"expression":false,"async":false}]}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to permute \"no\" into [no, on]","raw":"'expects to permute \"no\" into [no, on]'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"ArrayExpression","elements":[{"type":"Literal","value":"no","raw":"'no'"},{"type":"Literal","value":"on","raw":"'on'"}]}]},"property":{"type":"Identifier","name":"toEqual"}},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"permutate"},"arguments":[{"type":"Literal","value":"no","raw":"'no'"}]}]}}]},"generator":false,"expression":false,"async":false}]}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to permute \"yes\" into [esy, eys, sey, sye, yes, yse]","raw":"'expects to permute \"yes\" into [esy, eys, sey, sye, yes, yse]'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"ArrayExpression","elements":[{"type":"Literal","value":"esy","raw":"'esy'"},{"type":"Literal","value":"eys","raw":"'eys'"},{"type":"Literal","value":"sey","raw":"'sey'"},{"type":"Literal","value":"sye","raw":"'sye'"},{"type":"Literal","value":"yes","raw":"'yes'"},{"type":"Literal","value":"yse","raw":"'yse'"}]}]},"property":{"type":"Identifier","name":"toEqual"}},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"permutate"},"arguments":[{"type":"Literal","value":"yes","raw":"'yes'"}]}]}}]},"generator":false,"expression":false,"async":false}]}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to permute \"good\" into [dgoo dogo doog gdoo godo good odgo odog ogdo ogod oodg oogd ]","raw":"'expects to permute \"good\" into [dgoo dogo doog gdoo godo good odgo odog ogdo ogod oodg oogd ]'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"ArrayExpression","elements":[{"type":"Literal","value":"dgoo","raw":"'dgoo'"},{"type":"Literal","value":"dogo","raw":"'dogo'"},{"type":"Literal","value":"doog","raw":"'doog'"},{"type":"Literal","value":"gdoo","raw":"'gdoo'"},{"type":"Literal","value":"godo","raw":"'godo'"},{"type":"Literal","value":"good","raw":"'good'"},{"type":"Literal","value":"odgo","raw":"'odgo'"},{"type":"Literal","value":"odog","raw":"'odog'"},{"type":"Literal","value":"ogdo","raw":"'ogdo'"},{"type":"Literal","value":"ogod","raw":"'ogod'"},{"type":"Literal","value":"oodg","raw":"'oodg'"},{"type":"Literal","value":"oogd","raw":"'oogd'"}]}]},"property":{"type":"Identifier","name":"toEqual"}},"arguments":[{"type":"CallExpression","callee":{"type":"Identifier","name":"permutate"},"arguments":[{"type":"Literal","value":"good","raw":"'good'"}]}]}}]},"generator":false,"expression":false,"async":false}]}}]},"generator":false,"expression":false,"async":false}]}}],"sourceType":"module"}