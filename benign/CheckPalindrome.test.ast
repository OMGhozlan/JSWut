{"type":"Program","body":[{"type":"ImportDeclaration","specifiers":[{"type":"ImportSpecifier","local":{"type":"Identifier","name":"checkPalindrome"},"imported":{"type":"Identifier","name":"checkPalindrome"}}],"source":{"type":"Literal","value":"../CheckPalindrome","raw":"'../CheckPalindrome'"}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"describe"},"arguments":[{"type":"Literal","value":"checkPalindrome","raw":"'checkPalindrome'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to return \"Palindrome\" if the given string is a palindrome","raw":"'expects to return \"Palindrome\" if the given string is a palindrome'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclaration","declarations":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"SUT"},"init":{"type":"CallExpression","callee":{"type":"Identifier","name":"checkPalindrome"},"arguments":[{"type":"Literal","value":"madam","raw":"'madam'"}]}}],"kind":"const"},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"Identifier","name":"SUT"}]},"property":{"type":"Identifier","name":"toBe"}},"arguments":[{"type":"Literal","value":"Palindrome","raw":"'Palindrome'"}]}}]},"generator":false,"expression":false,"async":false}]}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to return \"Empty string\" if the given string is empty","raw":"'expects to return \"Empty string\" if the given string is empty'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclaration","declarations":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"SUT"},"init":{"type":"CallExpression","callee":{"type":"Identifier","name":"checkPalindrome"},"arguments":[{"type":"Literal","value":"","raw":"''"}]}}],"kind":"const"},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"Identifier","name":"SUT"}]},"property":{"type":"Identifier","name":"toBe"}},"arguments":[{"type":"Literal","value":"Empty string","raw":"'Empty string'"}]}}]},"generator":false,"expression":false,"async":false}]}},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"Identifier","name":"it"},"arguments":[{"type":"Literal","value":"expects to return \"Not a string\" if the given string is not a string","raw":"'expects to return \"Not a string\" if the given string is not a string'"},{"type":"ArrowFunctionExpression","id":null,"params":[],"body":{"type":"BlockStatement","body":[{"type":"VariableDeclaration","declarations":[{"type":"VariableDeclarator","id":{"type":"Identifier","name":"SUT"},"init":{"type":"CallExpression","callee":{"type":"Identifier","name":"checkPalindrome"},"arguments":[{"type":"Literal","value":123,"raw":"123"}]}}],"kind":"const"},{"type":"ExpressionStatement","expression":{"type":"CallExpression","callee":{"type":"MemberExpression","computed":false,"object":{"type":"CallExpression","callee":{"type":"Identifier","name":"expect"},"arguments":[{"type":"Identifier","name":"SUT"}]},"property":{"type":"Identifier","name":"toBe"}},"arguments":[{"type":"Literal","value":"Not a string","raw":"'Not a string'"}]}}]},"generator":false,"expression":false,"async":false}]}}]},"generator":false,"expression":false,"async":false}]}}],"sourceType":"module"}